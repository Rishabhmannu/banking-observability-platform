version: '3'

services:
  # API Gateway service
  api-gateway:
    build: ./api-gateway
    container_name: banking-api-gateway
    ports:
      - "8080:8080"
    environment:
      - ACCOUNT_SERVICE_URL=http://account-service:8081
      - TRANSACTION_SERVICE_URL=http://transaction-service:8082
      - AUTH_SERVICE_URL=http://auth-service:8083
      - NOTIFICATION_SERVICE_URL=http://notification-service:8084
      - FRAUD_SERVICE_URL=http://fraud-detection:8085
    depends_on:
      - account-service
      - transaction-service
      - auth-service
      - notification-service
      - fraud-detection
    networks:
      - banking-network

  # Account Service
  account-service:
    build: ./account-service
    container_name: banking-account-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/accountdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bankingdemo
      - SIMULATE_SLOW_QUERY=false
    depends_on:
      - mysql-db
    networks:
      - banking-network

  # Transaction Processing Service
  transaction-service:
    build: ./transaction-service
    container_name: banking-transaction-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/transactiondb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bankingdemo
      - ACCOUNT_SERVICE_URL=http://account-service:8081
      - SIMULATE_HIGH_LOAD=false
    depends_on:
      - mysql-db
      - account-service
    networks:
      - banking-network

  # Authentication Service
  auth-service:
    build: ./auth-service
    container_name: banking-auth-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/authdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bankingdemo
      - SIMULATE_MEMORY_LEAK=false
    depends_on:
      - mysql-db
    networks:
      - banking-network

  # Notification Service
  notification-service:
    build: ./notification-service
    container_name: banking-notification-service
    ports:
      - "8084:8084"
    environment:
      - SIMULATE_LATENCY=false
    networks:
      - banking-network

  # Fraud Detection Service
  fraud-detection:
    build: ./fraud-detection
    container_name: banking-fraud-detection
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/frauddb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=bankingdemo
      - SIMULATE_ALERT_STORM=false
    depends_on:
      - mysql-db
    networks:
      - banking-network

  # Database
  mysql-db:
    image: mysql:8.0
    container_name: banking-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=bankingdemo
      - MYSQL_DATABASE=bankingdb
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - banking-network

  # Load Generator
  load-generator:
    build: ./load-generator
    container_name: banking-load-generator
    environment:
      - API_GATEWAY_URL=http://api-gateway:8080
      - ENABLE_LOAD=true
      - LOAD_INTENSITY=medium
    depends_on:
      - api-gateway
    networks:
      - banking-network

  # Datadog Agent
  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: dd-agent
    environment:
      - DD_API_KEY=844a2dc15a16f0048e92e77b43493054
      - DD_SITE=us5.datadoghq.com
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - banking-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - banking-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=bankingdemo
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - banking-network

  # Node Exporter for host metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)(20199|/)'
    networks:
      - banking-network

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8086:8080"  # Changed from 8085 to avoid conflict with fraud-detection
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - banking-network

  # Auto-Baselining Service (CORRECTLY PLACED HERE)
  auto-baselining:
    build: 
      context: .
      dockerfile: Dockerfile.auto-baselining
    container_name: auto-baselining-service
    ports:
      - "5002:5002"
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - LOG_LEVEL=INFO
    depends_on:
      - prometheus
    networks:
      - banking-network
    volumes:
      - ./data/baselining:/app/data/baselining
      - ./logs/baselining:/app/logs
    restart: unless-stopped

networks:
  banking-network:
    driver: bridge

volumes:
  mysql-data:
  prometheus-data:
  grafana-data: